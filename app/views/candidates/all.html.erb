<section class="row">
  <div class="desc">
    <h2>Candidates</h2>
  </div>

  <% if user_signed_in? and current_user.is_admin? %>
    <a href="#" data-reveal-id="position-modal" class="small button radius large-12 columns min-top-margin">Create Position</a>
  <% end %>
  <% if @positions.size > 0 %>
    <% @positions.each do |position| %>
      <h2 class="small-margin-bottom text-center">
        <% if user_signed_in? and current_user.is_admin? %>
          <%= link_to position.name, position %>
        <% else %>
          <%= position.name %>
        <% end %>
      </h2>
        <% if position.candidates.size > 0 %>

        <div class="row">
          <div class="large-10 medium-10 large-centered medium-centered columns add-margin-bottom">
            <canvas id="chart-<%= position.id %>" class="large-centered medium-centered columns"></canvas>
          </div>
        </div>
        
        <!-- <div class="indent">
          <% position.candidates.each do |candidate| %>
            <%= link_to "#{candidate.last_name}, #{candidate.first_name}",
                        position_candidate_path(position, candidate) %>
          <% end %>
        </div> -->
      <% else %>
        <p class="indent">There no candidates.</p>
      <% end %>
    <% end %>
  <% else %>
    <p class="indent">There are no positions and candidates.</p>
  <% end %>
</section>

<%= render 'positions/form' %>

<script charset="utf-8">
  $(document).ready(function() {
    var chart_options = {
      //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
      scaleBeginAtZero : true,

      //Boolean - Whether grid lines are shown across the chart
      scaleShowGridLines : true,

      //String - Colour of the grid lines
      scaleGridLineColor : "rgba(0,0,0,.05)",

      //Number - Width of the grid lines
      scaleGridLineWidth : 1,

      //Boolean - Whether to show horizontal lines (except X axis)
      scaleShowHorizontalLines: true,

      //Boolean - Whether to show vertical lines (except Y axis)
      scaleShowVerticalLines: true,

      //Boolean - If there is a stroke on each bar
      barShowStroke : true,

      //Number - Pixel width of the bar stroke
      barStrokeWidth : 2,

      //Number - Spacing between each of the X value sets
      barValueSpacing : 5,

      //Number - Spacing between data sets within X values
      barDatasetSpacing : 1,
    };

    <% @positions_with_candidates = @positions.select { |position| position.candidates.size > 0 } %>
    <% @position_names = @positions_with_candidates.collect { |position| position.name } %>
    <% @candidate_names_arr = @positions_with_candidates.collect { |position| (position.candidates.collect { |candidate| candidate.last_name }) } %>
    <% @total_votes_arr = @positions_with_candidates.collect { |position| (position.candidates.collect { |candidate| candidate.votes.size }) } %>
    <% @male_votes_arr = @positions_with_candidates.collect { |position| position.candidates.collect { |candidate| candidate.male_votes.size } } %>
    <% @female_votes_arr = @positions_with_candidates.collect { |position| position.candidates.collect { |candidate| candidate.female_votes.size } } %>

    var api_data = setData(<%= raw @position_names.to_json %>, <%= raw @candidate_names_arr.to_json %>, <%= raw @total_votes_arr.to_json %>, <%= raw @male_votes_arr.to_json %>, <%= raw @female_votes_arr.to_json %>);

    var i = 0;
    api_data.positions.forEach(function(position){
      var candidates = new Array();
      var j = 0;
      api_data.total[i].forEach(function(total){
        // candidates.push(api_data.candidates[i][j] + " (" + total.toString() + ")");
        candidates.push("<a href=\"/positions\">Candidate</a>");

        j++;
      });

      var data = {
        labels: candidates,
        datasets: [
            {
                label: "Male",
                fillColor: "rgba(220,220,220,0.5)",
                strokeColor: "rgba(220,220,220,0.8)",
                highlightFill: "rgba(220,220,220,0.75)",
                highlightStroke: "rgba(220,220,220,1)",
                data: api_data.male[i],
                multiTooltipTemplate: "Male",
            },
            {
                label: "Female",
                fillColor: "rgba(151,187,205,0.5)",
                strokeColor: "rgba(151,187,205,0.8)",
                highlightFill: "rgba(151,187,205,0.75)",
                highlightStroke: "rgba(151,187,205,1)",
                data: api_data.female[i]
            }
        ]
      };

      i += 1;
      var ctx = $("#chart-"+i).get(0).getContext("2d");
      var barchart = new Chart(ctx).Bar(data, chart_options);
    });
  });
</script>
